{"version":3,"sources":["services/variables.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","services/services.ts","index.tsx"],"names":["FilterType","TodoItem","todo","isActive","setSelectedTodo","id","completed","title","className","cn","type","onClick","TodoList","todos","selectedTodo","map","TodoFilter","filterBy","setFilterBy","query","onSetQuery","value","onChange","event","target","Object","keys","option","toLowerCase","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","userId","useEffect","getUser","response","catch","errorMessage","console","log","finally","href","email","name","App","setisLoading","setTodos","All","setQuery","filteredTodos","filter","includes","Active","Completed","getFilterTodo","ReactDOM","render","document","getElementById"],"mappings":"sMAEYA,E,yECSCC,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAGEC,EAGEH,EAHFG,GACAC,EAEEJ,EAFFI,UACAC,EACEL,EADFK,MAOF,OACE,qBAEE,UAAQ,OACRC,UAAWC,IACT,CAAE,4BAA6BN,IAJnC,UAOE,oBAAIK,UAAU,eAAd,SAA8BH,IAC9B,oBAAIG,UAAU,eAAd,SACGF,GACC,sBAAME,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWC,IAAG,CACZ,mBAAoBH,EACpB,mBAAoBA,IAHxB,SAMGC,MAGL,oBAAIC,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVE,KAAK,SACLC,QAnCc,WACpBP,EAAgBF,IA8BZ,SAME,sBAAMM,UAAU,OAAhB,SACE,mBACEA,UAAWC,IACT,MACA,CACE,eAAgBN,EAChB,UAAWA,cArClBD,EAAKG,KCjBHO,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAT,EAEI,EAFJA,gBACAU,EACI,EADJA,aAEA,OACE,wBAAON,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGK,EAAME,KAAI,SAACb,GACV,IAAMC,GAAuB,OAAZW,QAAY,IAAZA,OAAA,EAAAA,EAAcT,MAAOH,EAAKG,GAE3C,OACE,cAAC,EAAD,CAEEH,KAAMA,EACNC,SAAUA,EACVC,gBAAiBA,GAHZF,EAAKG,c,SFnCZL,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KGQL,IAAMgB,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,SACAC,EAFyC,EAEzCA,YACAC,EAHyC,EAGzCA,MACAC,EAJyC,EAIzCA,WAJyC,OAMzC,uBAAMZ,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,wBACEa,MAAOJ,EACP,UAAQ,eACRK,SAAU,SAACC,GACTL,EAAYK,EAAMC,OAAOH,QAJ7B,SAOII,OAAOC,KAAK1B,GACXe,KAAI,SAAAY,GAAM,OACT,wBAEEN,MAAOM,EAAOC,cAFhB,SAIGD,GAHIA,YAUjB,oBAAGnB,UAAU,qDAAb,UACE,uBACEa,MAAOF,EACP,UAAQ,cACRT,KAAK,OACLF,UAAU,QACVqB,YAAY,YACZP,SAAU,SAACC,GAAD,OAAWH,EAAWG,EAAMC,OAAOH,UAE/C,sBAAMb,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBsB,MAAO,CAAEC,cAAe,OAAxD,WACKZ,GAED,wBACE,UAAQ,oBACRT,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAMS,EAAW,gBCxDzBY,G,MAAmB,kBAC9B,qBAAKxB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASyB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAAC,GAGpC,IAFL9B,EAEI,EAFJA,aACAV,EACI,EADJA,gBAEA,EAAwByC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAGE5C,EAIES,EAJFT,GACAE,EAGEO,EAHFP,MACAD,EAEEQ,EAFFR,UACA4C,EACEpC,EADFoC,OAGFC,qBAAU,WACRF,GAAa,GDDM,SAACC,GAAD,OAAoBjB,EAAG,iBAAiBiB,ICG3DE,CAAQF,GACLV,MAAK,SAACa,GACLN,EAAQM,MAETC,OAAM,SAACC,GAENC,QAAQC,IAAIF,MAEbG,SAAQ,kBAAMT,GAAa,QAC7B,IAMH,OACE,sBAAKzC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdwC,EACI,cAAC,EAAD,IAED,sBAAKxC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYH,KAIZ,wBACEK,KAAK,SACLF,UAAU,SACV,UAAQ,cACRG,QAAS,WAxBrBP,EAAgB,YA4BR,sBAAKI,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGD,IAGH,oBAAGC,UAAU,QAAQ,UAAQ,aAA7B,UACGF,EAEG,wBAAQE,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAGmD,KAAI,wBAAYb,QAAZ,IAAYA,OAAZ,EAAYA,EAAMc,OAAzB,gBACGd,QADH,IACGA,OADH,EACGA,EAAMe,oBCrEZC,EAAgB,WAC3B,MAAkCjB,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBe,EAAlB,KACA,EAA0BlB,mBAAiB,IAA3C,mBAAOhC,EAAP,KAAcmD,EAAd,KACA,EAAwCnB,mBAAsB,MAA9D,mBAAO/B,EAAP,KAAqBV,EAArB,KACA,EAAgCyC,mBAAS7C,EAAWiE,KAApD,mBAAOhD,EAAP,KAAiBC,EAAjB,KACA,EAA0B2B,mBAAS,IAAnC,mBAAO1B,EAAP,KAAc+C,EAAd,KAEAf,qBAAU,WACRY,GAAa,GFCa9B,EAAY,UEEnCO,MAAK,SAACa,GACLW,EAASX,MAEVC,OAAM,SAACC,GAENC,QAAQC,IAAIF,GACZS,EAAS,OAEVN,SAAQ,kBAAMK,GAAa,QAC7B,IAEH,IAAMI,EClCqB,SAC3BhD,EACAF,EACAJ,GAEA,OAAII,IAAajB,EAAWiE,KAAQ9C,EAIdN,EAAMuD,QAAO,SAAAlE,GACjC,OAAOA,EAAKK,MACTqB,cACAyC,SAASlD,EAAMS,kBAGCwC,QAAO,SAAAlE,GAC1B,OAAQe,GACN,KAAKjB,EAAWsE,OACd,OAAQpE,EAAKI,UAGf,KAAKN,EAAWuE,UACd,OAAOrE,EAAKI,UAGd,QACE,OAAOJ,MApBJW,ED4Ba2D,CAAcrD,EAAOF,EAAUJ,GAErD,OACE,sBAAKL,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACES,SAAUA,EACVC,YAAaA,EACbC,MAAOA,EACPC,WAAY8C,MAIhB,qBAAK1D,UAAU,QAAf,SACGwC,EACI,cAAC,EAAD,IAED,cAAC,EAAD,CACEnC,MAAOsD,EACPrD,aAAcA,EACdV,gBAAiBA,aAQ9BU,GACC,cAAC,EAAD,CACEA,aAAcA,EACdV,gBAAiBA,QEtE3BqE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d04c3374.chunk.js","sourcesContent":["export const LOADING_TIME = 300;\n\nexport enum FilterType {\n  'All' = 'all',\n  'Active' = 'active',\n  'Completed' = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  isActive: boolean,\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  isActive,\n  setSelectedTodo,\n}) => {\n  const {\n    id,\n    completed,\n    title,\n  } = todo;\n\n  const handleShowBtn = () => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <tr\n      key={todo.id}\n      data-cy=\"todo\"\n      className={cn(\n        { 'has-background-info-light': isActive },\n      )}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleShowBtn}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn(\n                'far',\n                {\n                  'fa-eye-slash': isActive,\n                  'fa-eye': !isActive,\n                },\n              )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo | null) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const isActive = selectedTodo?.id === todo.id;\n\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              isActive={isActive}\n              setSelectedTodo={setSelectedTodo}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterType } from '../../services/variables';\n\ntype Props = {\n  filterBy: string,\n  setFilterBy: (option: FilterType) => void,\n  query: string,\n  onSetQuery: (option: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  onSetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          value={filterBy}\n          data-cy=\"statusSelect\"\n          onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n            setFilterBy(event.target.value as FilterType);\n          }}\n        >\n          {(Object.keys(FilterType) as Array<keyof typeof FilterType>)\n            .map(option => (\n              <option\n                key={option}\n                value={option.toLowerCase()}\n              >\n                {option}\n              </option>\n            ))}\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        value={query}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(event) => onSetQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {!!query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onSetQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(userId)\n      .then((response) => {\n        setUser(response);\n      })\n      .catch((errorMessage) => {\n        // eslint-disable-next-line no-console\n        console.log(errorMessage);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => handleCloseModal()}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport './App.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { getFilterTodo } from './services/services';\nimport { FilterType } from './services/variables';\n\nexport const App: React.FC = () => {\n  const [isLoading, setisLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState(FilterType.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setisLoading(true);\n\n    getTodos()\n      .then((response) => {\n        setTodos(response);\n      })\n      .catch((errorMessage) => {\n        // eslint-disable-next-line\n        console.log(errorMessage);\n        setTodos([]);\n      })\n      .finally(() => setisLoading(false));\n  }, []);\n\n  const filteredTodos = getFilterTodo(query, filterBy, todos);\n\n  return (\n    <div className=\"App\">\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                onSetQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </div>\n  );\n};\n","import { FilterType } from './variables';\nimport { Todo } from '../types/Todo';\n\nexport const getFilterTodo = (\n  query: string,\n  filterBy: string,\n  todos: Todo[],\n) => {\n  if (filterBy === FilterType.All && !query) {\n    return todos;\n  }\n\n  const preparedGoods = todos.filter(todo => {\n    return todo.title\n      .toLowerCase()\n      .includes(query.toLowerCase());\n  });\n\n  return preparedGoods.filter(todo => {\n    switch (filterBy) {\n      case FilterType.Active: {\n        return !todo.completed;\n      }\n\n      case FilterType.Completed: {\n        return todo.completed;\n      }\n\n      default: {\n        return todo;\n      }\n    }\n  });\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}